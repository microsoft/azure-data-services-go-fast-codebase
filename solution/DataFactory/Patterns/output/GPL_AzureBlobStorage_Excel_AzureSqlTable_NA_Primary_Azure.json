{
  "name": "GPL_AzureBlobStorage_Excel_AzureSqlTable_NA_Primary_Azure",
  "properties": {
    "activities": [
      {
        "dependsOn": [],
        "name": "Pipeline AF Log - ADLS to Azure SQL Start",
        "type": "ExecutePipeline",
        "typeProperties": {
          "parameters": {
            "Body": {
              "type": "Expression",
              "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":3,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy to SQL\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"Status\":\"Started\"}'))"
            },
            "FunctionName": "Log",
            "Method": "Post"
          },
          "pipeline": {
            "referenceName": "SPL_AzureFunction",
            "type": "PipelineReference"
          },
          "waitOnCompletion": false
        },
        "userProperties": []
      },
      {
        "dependsOn": [
          {
            "activity": "Pipeline AF Log - ADLS to Azure SQL Start",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "description": "Auto Creates Table Using a Schema File",
        "name": "If Auto Create Table",
        "type": "IfCondition",
        "typeProperties": {
          "expression": {
            "type": "Expression",
            "value": "@and(not(equals(coalesce(pipeline().parameters.TaskObject.Source.SchemaFileName,''),'')),bool(pipeline().parameters.TaskObject.Target.AutoCreateTable))"
          },
          "ifTrueActivities": [
            {
              "dependsOn": [],
              "name": "Execute Create Table",
              "type": "ExecutePipeline",
              "typeProperties": {
                "parameters": {
                  "TaskObject": {
                    "type": "Expression",
                    "value": "@pipeline().parameters.TaskObject"
                  }
                },
                "pipeline": {
                  "referenceName": "GPL_AzureSqlTable_NA_Create_Table_Azure",
                  "type": "PipelineReference"
                },
                "waitOnCompletion": true
              },
              "userProperties": []
            },
            {
              "dependsOn": [
                {
                  "activity": "Execute Create Table",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "linkedServiceName": {
                "referenceName": "SLS_AzureFunctionApp",
                "type": "LinkedServiceReference"
              },
              "name": "AF Get Mapping",
              "policy": {
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false,
                "timeout": "7.00:00:00"
              },
              "type": "AzureFunctionActivity",
              "typeProperties": {
                "body": {
                  "type": "Expression",
                  "value": "@json(\n concat('{\"TaskInstanceId\":\"', \n  string(pipeline().parameters.TaskObject.TaskInstanceId), \n  '\",\"ExecutionUid\":\"', \n  string(pipeline().parameters.TaskObject.ExecutionUid), \n  '\",\"RunId\":\"', \n  string(pipeline().RunId), \n  '\",\"StorageAccountName\":\"', \n  string(pipeline().parameters.TaskObject.Source.System.SystemServer), \n  '\",\"StorageAccountContainer\":\"', \n  string(pipeline().parameters.TaskObject.Source.System.Container), \n  '\",\"RelativePath\":\"', \n  string(pipeline().parameters.TaskObject.Source.Instance.SourceRelativePath), \n  '\",\"SchemaFileName\":\"', \n  string(pipeline().parameters.TaskObject.Source.SchemaFileName), \n  '\",\"SourceType\":\"', \n  if(\n     contains(string(pipeline().parameters.TaskObject.Source.System.SystemServer),'.dfs.core.windows.net'),\n     'ADLS',\n     'Azure Blob'\n    ), \n  '\",\"TargetType\":\"', \n  string(pipeline().parameters.TaskObject.Target.System.Type), \n  '\",\"MetadataType\":\"Parquet\"}')\n)"
                },
                "functionName": "GetSourceTargetMapping",
                "method": "POST"
              },
              "userProperties": []
            }
          ]
        },
        "userProperties": []
      },
      {
        "dependsOn": [
          {
            "activity": "If Auto Create Table",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "inputs": [
          {
            "parameters": {
              "FileName": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.DataFileName"
              },
              "FirstRowAsHeader": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.FirstRowAsHeader"
              },
              "RelativePath": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.Instance.SourceRelativePath"
              },
              "SheetName": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.SheetName"
              },
              "StorageAccountContainerName": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.System.Container"
              },
              "StorageAccountEndpoint": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Source.System.SystemServer"
              }
            },
            "referenceName": "GDS_AzureBlobStorage_Excel_Azure",
            "type": "DatasetReference"
          }
        ],
        "name": "Copy to SQL",
        "outputs": [
          {
            "parameters": {
              "Database": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Target.System.Database"
              },
              "Schema": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Target.StagingTableSchema"
              },
              "Server": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Target.System.SystemServer"
              },
              "Table": {
                "type": "Expression",
                "value": "@pipeline().parameters.TaskObject.Target.StagingTableName"
              }
            },
            "referenceName": "GDS_AzureSqlTable_NA_Azure",
            "type": "DatasetReference"
          }
        ],
        "policy": {
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false,
          "timeout": "7.00:00:00"
        },
        "type": "Copy",
        "typeProperties": {
          "enableStaging": false,
          "parallelCopies": {
            "type": "Expression",
            "value": "@pipeline().parameters.TaskObject.DegreeOfCopyParallelism"
          },
          "sink": {
            "disableMetricsCollection": false,
            "preCopyScript": {
              "type": "Expression",
              "value": "@{pipeline().parameters.TaskObject.Target.PreCopySQL}"
            },
            "tableOption": "autoCreate",
            "type": "AzureSqlSink"
          },
          "source": {
            "storeSettings": {
              "recursive": true,
              "type": "AzureBlobStorageReadSettings"
            },
            "type": "ExcelSource"
          },
          "translator": {
            "type": "Expression",
            "value": "@if(and(not(equals(coalesce(pipeline().parameters.TaskObject.Source.SchemaFileName,''),'')),bool(pipeline().parameters.TaskObject.Target.AutoCreateTable)),activity('AF Get Mapping').output.value, null)"
          }
        },
        "userProperties": []
      },
      {
        "dependsOn": [
          {
            "activity": "Copy to SQL",
            "dependencyConditions": [
              "Failed"
            ]
          }
        ],
        "name": "Pipeline AF Log - ADLS to Azure SQL Failed",
        "type": "ExecutePipeline",
        "typeProperties": {
          "parameters": {
            "Body": {
              "type": "Expression",
              "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":1,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy to SQL\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"EndDateTimeOffSet\":\"', string(utcnow()), '\",\"Comment\":\"', string(activity('Copy to SQL').error.message), '\",\"Status\":\"Failed\"}'))"
            },
            "FunctionName": "Log",
            "Method": "Post"
          },
          "pipeline": {
            "referenceName": "SPL_AzureFunction",
            "type": "PipelineReference"
          },
          "waitOnCompletion": false
        },
        "userProperties": []
      },
      {
        "dependsOn": [
          {
            "activity": "Copy to SQL",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "name": "Pipeline AF Log - ADLS to Azure SQL Succeed",
        "type": "ExecutePipeline",
        "typeProperties": {
          "parameters": {
            "Body": {
              "type": "Expression",
              "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":1,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy to SQL\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"EndDateTimeOffSet\":\"', string(utcnow()), '\",\"RowsInserted\":\"', string(activity('Copy to SQL').output.rowsCopied), '\",\"Comment\":\"\",\"Status\":\"Complete\"}'))"
            },
            "FunctionName": "Log",
            "Method": "Post"
          },
          "pipeline": {
            "referenceName": "SPL_AzureFunction",
            "type": "PipelineReference"
          },
          "waitOnCompletion": false
        },
        "userProperties": []
      },
      {
        "dependsOn": [
          {
            "activity": "Pipeline AF Log - ADLS to Azure SQL Succeed",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "name": "Execute AZ_SQL_Post-Copy",
        "type": "ExecutePipeline",
        "typeProperties": {
          "parameters": {
            "TaskObject": {
              "type": "Expression",
              "value": "@pipeline().parameters.TaskObject"
            }
          },
          "pipeline": {
            "referenceName": "GPL_AzureSqlTable_NA_Post_Copy_Azure",
            "type": "PipelineReference"
          },
          "waitOnCompletion": true
        },
        "userProperties": []
      }
    ],
    "annotations": [],
    "folder": {
      "name": "ADS Go Fast/Data Movement/Azure-Storage-to-SQL-Database/Azure"
    },
    "lastPublishTime": "2020-07-29T09:43:40Z",
    "parameters": {
      "TaskObject": {
        "type": "object"
      }
    }
  },
  "type": "Microsoft.DataFactory/factories/pipelines"
}

{
   "name": "GPL_SqlServerTable_NA_AzureBlobStorage_Parquet_Watermark_IRA",
   "properties": {
      "activities": [
         {
            "dependsOn": [ ],
            "name": "Set SQLStatement",
            "type": "SetVariable",
            "typeProperties": {
               "value": {
                  "type": "Expression",
                  "value": "@replace(replace(replace(pipeline().parameters.TaskObject.Source.Extraction.SQLStatement,'<batchcount>',string(pipeline().parameters.BatchCount)),'<item>',string(pipeline().parameters.Item)),'<newWatermark>',pipeline().parameters.NewWaterMark)"
               },
               "variableName": "SQLStatement"
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [
               {
                  "activity": "Pipeline AF Log - Copy Start",
                  "dependencyConditions": [
                     "Succeeded"
                  ]
               }
            ],
            "inputs": [
               {
                  "parameters": {
                     "Database": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Database.Name"
                     },
                     "KeyVaultBaseUrl": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.KeyVaultBaseUrl"
                     },
                     "PasswordSecret": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Database.PasswordKeyVaultSecretName"
                     },
                     "Server": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Database.SystemName"
                     },
                     "TableName": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Extraction.TableName"
                     },
                     "TableSchema": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Extraction.TableSchema"
                     },
                     "UserName": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Source.Database.Username"
                     }
                  },
                  "referenceName": "GDS_SqlServerTable_NA_IRA",
                  "type": "DatasetReference"
               }
            ],
            "name": "Copy SQL to Storage",
            "outputs": [
               {
                  "parameters": {
                     "FileName": {
                        "type": "Expression",
                        "value": "@replace(pipeline().parameters.TaskObject.Target.DataFileName,'.parquet',concat('.chunk_', string(pipeline().parameters.Item),'.parquet'))"
                     },
                     "RelativePath": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.RelativePath"
                     },
                     "StorageAccountContainerName": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.StorageAccountContainer"
                     },
                     "StorageAccountEndpoint": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.StorageAccountName"
                     }
                  },
                  "referenceName": "GDS_AzureBlobStorage_Parquet_IRA",
                  "type": "DatasetReference"
               }
            ],
            "policy": {
               "retry": 0,
               "retryIntervalInSeconds": 30,
               "secureInput": false,
               "secureOutput": false,
               "timeout": "7.00:00:00"
            },
            "type": "Copy",
            "typeProperties": {
               "enableStaging": false,
               "parallelCopies": {
                  "type": "Expression",
                  "value": "@pipeline().parameters.TaskObject.DegreeOfCopyParallelism"
               },
               "sink": {
                  "storeSettings": {
                     "type": "AzureBlobStorageWriteSettings"
                  },
                  "type": "ParquetSink"
               },
               "source": {
                  "queryTimeout": "02:00:00",
                  "sqlReaderQuery": {
                     "type": "Expression",
                     "value": "@variables('SQLStatement')"
                  },
                  "type": "SqlServerSource"
               },
               "translator": {
                  "type": "Expression",
                  "value": "@pipeline().parameters.Mapping"
               }
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [
               {
                  "activity": "Copy SQL to Storage",
                  "dependencyConditions": [
                     "Failed"
                  ]
               }
            ],
            "name": "Pipeline AF Log - Copy Failed",
            "type": "ExecutePipeline",
            "typeProperties": {
               "parameters": {
                  "Body": {
                     "type": "Expression",
                     "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":1,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy SQL to Storage\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"EndDateTimeOffSet\":\"', string(utcnow()), '\",\"Comment\":\"', string(activity('Copy SQL to Storage').error.message), '\",\"Status\":\"Failed\"}'))"
                  },
                  "FunctionName": "Log",
                  "Method": "Post"
               },
               "pipeline": {
                  "referenceName": "AZ_Function_Generic",
                  "type": "PipelineReference"
               },
               "waitOnCompletion": false
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [
               {
                  "activity": "Get Parquet Metadata",
                  "dependencyConditions": [
                     "Succeeded"
                  ]
               }
            ],
            "linkedServiceName": {
               "referenceName": "AzureFunctionAdsGoFastDataLakeAccelFunApp",
               "type": "LinkedServiceReference"
            },
            "name": "AF Persist Parquet Metadata",
            "policy": {
               "retry": 0,
               "retryIntervalInSeconds": 30,
               "secureInput": false,
               "secureOutput": false,
               "timeout": "7.00:00:00"
            },
            "type": "AzureFunctionActivity",
            "typeProperties": {
               "body": {
                  "type": "Expression",
                  "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"StorageAccountName\":\"', string(pipeline().parameters.TaskObject.Target.StorageAccountName), '\",\"StorageAccountContainer\":\"', string(pipeline().parameters.TaskObject.Target.StorageAccountContainer), '\",\"RelativePath\":\"', string(pipeline().parameters.TaskObject.Target.RelativePath), '\",\"SchemaFileName\":\"', string(pipeline().parameters.TaskObject.Target.SchemaFileName), '\",\"SourceType\":\"', string(pipeline().parameters.TaskObject.Source.Type), '\",\"TargetType\":\"', string(pipeline().parameters.TaskObject.Target.Type), '\",\"Data\":',string(activity('Get Parquet Metadata').output),',\"MetadataType\":\"Parquet\"}'))"
               },
               "functionName": "TaskExecutionSchemaFile",
               "method": "POST"
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [
               {
                  "activity": "Copy SQL to Storage",
                  "dependencyConditions": [
                     "Succeeded"
                  ]
               }
            ],
            "name": "Get Parquet Metadata",
            "policy": {
               "retry": 0,
               "retryIntervalInSeconds": 30,
               "secureInput": false,
               "secureOutput": false,
               "timeout": "7.00:00:00"
            },
            "type": "GetMetadata",
            "typeProperties": {
               "dataset": {
                  "parameters": {
                     "FileName": {
                        "type": "Expression",
                        "value": "@replace(pipeline().parameters.TaskObject.Target.DataFileName,'.parquet',concat('.chunk_', string(pipeline().parameters.Item),'.parquet'))"
                     },
                     "RelativePath": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.RelativePath"
                     },
                     "StorageAccountContainerName": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.StorageAccountContainer"
                     },
                     "StorageAccountEndpoint": {
                        "type": "Expression",
                        "value": "@pipeline().parameters.TaskObject.Target.StorageAccountName"
                     }
                  },
                  "referenceName": "GDS_AzureBlobStorage_Parquet_IRA",
                  "type": "DatasetReference"
               },
               "fieldList": [
                  "structure"
               ],
               "storeSettings": {
                  "recursive": true,
                  "type": "AzureBlobFSReadSettings"
               }
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [ ],
            "name": "Pipeline AF Log - Copy Start",
            "type": "ExecutePipeline",
            "typeProperties": {
               "parameters": {
                  "Body": {
                     "type": "Expression",
                     "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":3,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy SQL to Storage\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"Status\":\"Started\"}'))"
                  },
                  "FunctionName": "Log",
                  "Method": "Post"
               },
               "pipeline": {
                  "referenceName": "AZ_Function_Generic",
                  "type": "PipelineReference"
               },
               "waitOnCompletion": false
            },
            "userProperties": [ ]
         },
         {
            "dependsOn": [
               {
                  "activity": "Copy SQL to Storage",
                  "dependencyConditions": [
                     "Succeeded"
                  ]
               }
            ],
            "name": "Pipeline AF Log - Copy Succeed",
            "type": "ExecutePipeline",
            "typeProperties": {
               "parameters": {
                  "Body": {
                     "type": "Expression",
                     "value": "@json(concat('{\"TaskInstanceId\":\"', string(pipeline().parameters.TaskObject.TaskInstanceId), '\",\"ExecutionUid\":\"', string(pipeline().parameters.TaskObject.ExecutionUid), '\",\"RunId\":\"', string(pipeline().RunId), '\",\"LogTypeId\":1,\"LogSource\":\"ADF\",\"ActivityType\":\"Copy SQL to Storage\",\"StartDateTimeOffSet\":\"', string(pipeline().TriggerTime), '\",\"EndDateTimeOffSet\":\"', string(utcnow()), '\",\"RowsInserted\":\"', string(activity('Copy SQL to Storage').output.rowsCopied), '\",\"Comment\":\"\",\"Status\":\"Complete\"}'))"
                  },
                  "FunctionName": "Log",
                  "Method": "Post"
               },
               "pipeline": {
                  "referenceName": "AZ_Function_Generic",
                  "type": "PipelineReference"
               },
               "waitOnCompletion": false
            },
            "userProperties": [ ]
         }
      ],
      "annotations": [ ],
      "folder": {
         "name": "ADS Go Fast/Data Movement/IRA/Components"
      },
      "parameters": {
         "BatchCount": {
            "type": "int"
         },
         "Item": {
            "type": "int"
         },
         "Mapping": {
            "type": "object"
         },
         "NewWaterMark": {
            "type": "string"
         },
         "TaskObject": {
            "defaultValue": {
               "DataFactory": {
                  "ADFPipeline": "AZ_SQL_AZ_Storage_Parquet_IRA",
                  "Id": 1,
                  "Name": "adsgofastdatakakeacceladf",
                  "ResourceGroup": "AdsGoFastDataLakeAccel",
                  "SubscriptionId": "035a1364-f00d-48e2-b582-4fe125905ee3"
               },
               "DegreeOfCopyParallelism": 1,
               "Enabled": 1,
               "ExecutionUid": "2c5924ee-b855-4d2b-bb7e-4f5dde4c4dd3",
               "KeyVaultBaseUrl": "https://adsgofastkeyvault.vault.azure.net/",
               "NumberOfRetries": 111,
               "ScheduleMasterId": 2,
               "Source": {
                  "Database": {
                     "AuthenticationType": "MSI",
                     "Name": "AWSample",
                     "SystemName": "adsgofastdatakakeaccelsqlsvr.database.windows.net"
                  },
                  "Extraction": {
                     "FullOrIncremental": "Full",
                     "IncrementalType": null,
                     "TableName": "SalesOrderHeader",
                     "TableSchema": "SalesLT",
                     "Type": "Table"
                  },
                  "Type": "Azure SQL"
               },
               "Target": {
                  "DataFileName": "SalesLT.SalesOrderHeader.parquet",
                  "FirstRowAsHeader": null,
                  "MaxConcorrentConnections": null,
                  "RelativePath": "/AwSample/SalesLT/SalesOrderHeader/2020/7/9/14/12/",
                  "SchemaFileName": "SalesLT.SalesOrderHeader",
                  "SheetName": null,
                  "SkipLineCount": null,
                  "StorageAccountAccessMethod": "MSI",
                  "StorageAccountContainer": "datalakeraw",
                  "StorageAccountName": "https://adsgofastdatalakeaccelst.blob.core.windows.net",
                  "Type": "Azure Blob"
               },
               "TaskGroupConcurrency": 10,
               "TaskGroupPriority": 0,
               "TaskInstanceId": 75,
               "TaskMasterId": 12,
               "TaskStatus": "Untried",
               "TaskType": "SQL Database to Azure Storage"
            },
            "type": "object"
         }
      },
      "variables": {
         "SQLStatement": {
            "type": "String"
         }
      }
   },
   "type": "Microsoft.DataFactory/factories/pipelines"
}
